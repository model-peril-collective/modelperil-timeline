{"version":3,"file":"static/js/Story.037b7ca4.chunk.js","mappings":"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","sources":["webpack://modelperil-timeline/./src/components/story/Story.module.scss?5b2e","components/story/Story.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Story_container__a3g7S\",\"lastStory\":\"Story_lastStory__5jeYx\",\"contentWrapper\":\"Story_contentWrapper__-GV6O\",\"heading\":\"Story_heading__dxKEI\",\"titleWrapper\":\"Story_titleWrapper__1jBTh\",\"date\":\"Story_date__z54BV\",\"lineWrapper\":\"Story_lineWrapper__02RMg\",\"title\":\"Story_title__GkzTx\",\"subtitle\":\"Story_subtitle__tPXKK\",\"artifactsContainer\":\"Story_artifactsContainer__Dvt6D\",\"imgList\":\"Story_imgList__Ro8xv\"};","import clsx from 'clsx';\nimport { gsap } from 'gsap';\nimport ScrollTrigger from 'gsap/ScrollTrigger';\nimport { CSSProperties, lazy, useEffect, useRef } from 'react';\nimport { Artifact as ArtifactModel, Date } from '../../models';\nimport { ComponentFactory, ArtifactType } from '../index';\nimport styles from './Story.module.scss';\n\ngsap.registerPlugin(ScrollTrigger);\n\nconst Artifact = lazy(() => ComponentFactory.ArtifactAsync());\n\nexport interface StoryProps {\n  artifacts: ArtifactModel[];\n  date: Date;\n  id?: string;\n  isLast?: boolean;\n  subtitle?: string;\n  title: string;\n}\n\nconst Story = (props: StoryProps) => {\n  const { artifacts, date, id, isLast = false, subtitle, title } = props;\n  const storyRef = useRef<HTMLDivElement>(null);\n  const headingRef = useRef<HTMLDivElement>(null);\n  const animationRefs = useRef<HTMLDivElement[]>([]);\n\n  const addtoRefs = (el: HTMLDivElement) => {\n    if (el && !animationRefs.current.includes(el)) {\n      animationRefs.current.push(el);\n    }\n  };\n\n  useEffect(() => {\n    const ctx = gsap.context(() => {\n      if (animationRefs?.current.length > 0) {\n        animationRefs.current.forEach((ref) => {\n          gsap.from(ref, {\n            scrollTrigger: {\n              trigger: ref,\n              start: 'top center+=25%',\n              end: 'top center-=5%',\n              scrub: 0.5,\n              // markers: true,\n            },\n            x: '-120px',\n            autoAlpha: 0,\n          });\n        });\n      }\n    }, storyRef);\n    return () => ctx.revert();\n  }, [animationRefs]);\n\n  const renderDate = (date: Date) => {\n    if (!date.month && !date.day) return null;\n\n    let result = '';\n\n    if (date.month && date.month.length > 0) result = date.month;\n    if (date.day && date.day.length > 0) result += ` ${date.day}`;\n\n    return (\n      <span ref={addtoRefs} className={styles.date}>\n        {result}\n      </span>\n    );\n  };\n\n  const renderArtifacts = (list: ArtifactModel[]) => {\n    const hasImage = list.some((story) => story.type === ArtifactType.Image);\n\n    if (hasImage) {\n      const textList: ArtifactModel[] = [];\n      const imgList: ArtifactModel[] = [];\n\n      list.forEach((a) => {\n        if (a.type !== ArtifactType.Image) textList.push(a);\n        else imgList.push(a);\n      });\n\n      return (\n        <>\n          {textList.map((a, i) => (\n            <Artifact key={i} ref={addtoRefs} type={a.type as ArtifactType} content={a.content} />\n          ))}\n          <div className={styles.imgList}>\n            {imgList.map((a, i) => (\n              <Artifact key={i} ref={addtoRefs} type={ArtifactType.Image} content={a.content} />\n            ))}\n          </div>\n        </>\n      );\n    } else {\n      return list.map((a, i) => (\n        <Artifact key={i} ref={addtoRefs} type={a.type as ArtifactType} content={a.content} />\n      ));\n    }\n  };\n\n  return (\n    <article ref={storyRef} id={id} className={clsx(styles.container, isLast && styles.lastStory)}>\n      <div className={styles.contentWrapper}>\n        <header ref={headingRef} className={styles.heading}>\n          <div className={clsx(styles.titleWrapper)}>\n            {renderDate(date)}\n            {title && (\n              <div ref={addtoRefs} className={clsx(styles.title)}>\n                {title}\n              </div>\n            )}\n          </div>\n          {subtitle && (\n            <span ref={addtoRefs} className={clsx(styles.subtitle)}>\n              {subtitle}\n            </span>\n          )}\n        </header>\n        <div\n          className={styles.artifactsContainer}\n          style={{ '--headingPosition': `${headingRef.current?.offsetHeight}px` } as CSSProperties}\n        >\n          {renderArtifacts(artifacts)}\n        </div>\n      </div>\n    </article>\n  );\n};\n\nexport default Story;\n"],"names":["gsap","registerPlugin","ScrollTrigger","Artifact","lazy","ComponentFactory","ArtifactAsync","props","_headingRef$current","artifacts","date","id","isLast","subtitle","title","storyRef","useRef","headingRef","animationRefs","addtoRefs","el","current","includes","push","useEffect","ctx","context","length","forEach","ref","from","scrollTrigger","trigger","start","end","scrub","x","autoAlpha","revert","_jsx","className","clsx","styles","children","_jsxs","month","day","result","renderDate","style","offsetHeight","list","some","story","type","ArtifactType","Image","textList","imgList","a","_Fragment","map","i","content","renderArtifacts"],"sourceRoot":""}