{"version":3,"file":"static/js/Article.0ad04cf3.chunk.js","mappings":"2NAMO,IAAKA,EAAS,SAATA,GAAS,OAATA,EAAS,YAATA,EAAS,cAATA,EAAS,cAATA,CAAS,MA0BrB,MAyGA,EAzGiBC,IACf,MAAM,QAAEC,EAAO,KAAEC,EAAO,QAAWF,EAC7BG,GAAaC,EAAAA,EAAAA,aAEnB,IAAIC,EACkB,WAAX,OAAPJ,QAAO,IAAPA,OAAO,EAAPA,EAASK,QACXD,EAAeE,EAAAA,IAAAA,CAAQ,KAADC,OAAiCP,EAAQQ,WAGjE,MAAMC,EAAiBD,IACrB,IAAIE,EAAe,GAUnB,MARuB,kBAAZF,EACTE,EAAeF,EACZG,WAAW,cAAe,4BAC1BA,WAAW,eAAgB,WACF,kBAAZH,IAChBE,EAAeF,EAAQI,YAGlBF,CAAY,EAsErB,OA1BAG,EAAAA,EAAAA,kBAAgB,KACd,MAAMC,EAAMC,EAAAA,GAAKC,SAAQ,KACvBD,EAAAA,GAAKE,eAAeC,EAAAA,GAEUC,MAU9BJ,EAAAA,GAAKK,KAAK,mBAAoB,CAC5BC,UAAW,EACXC,QAAS,EACTC,MAAO,GACPC,EAAG,IACHC,eAf4BN,EAeQ,mBAd7B,CACLO,IAAK,kBACLC,SAAS,EACTC,OAAO,EACPC,MAAO,iBACPV,QAASA,KAUX,GACDjB,GAEH,MAAO,IAAMY,EAAIgB,QAAQ,GACxB,CAAC5B,KAGF6B,EAAAA,EAAAA,MAAA,OAAKC,IAAK9B,EAAY+B,WAAWC,EAAAA,EAAAA,GAAK,kBAAmBjC,GAAMkC,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,SAAOH,UAAU,gBAAeE,SArEhBE,KAClB,IAAIC,EAASD,EAAKE,KAMlB,OAJIF,EAAKG,OAASH,EAAKG,MAAMC,OAAS,IAAGH,GAAM,KAAA/B,OAAS8B,EAAKG,QAEzDH,EAAKK,KAAOL,EAAKK,IAAID,OAAS,IAAGH,GAAM,IAAA/B,OAAQ8B,EAAKK,OAEjDN,EAAAA,EAAAA,KAAA,KAAGH,WAAWC,EAAAA,EAAAA,GAAK,sBAAsBC,SAAEG,GAAW,EA8DzBK,CAAW3C,EAAQqC,SACrDN,EAAAA,EAAAA,MAAA,WAASE,WAAWC,EAAAA,EAAAA,GAAK,mBAAmBC,SAAA,CACzCnC,EAAQ4C,OAAS5C,EAAQ4C,MAAMH,OAAS,IACvCL,EAAAA,EAAAA,KAAA,UAAQH,UAAU,iBAAgBE,UAChCC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,uBAAsBE,SAAEnC,EAAQ4C,UA/D1B5C,KAC5B,MAAM,QAAEQ,EAAO,QAAEqC,EAAO,KAAExC,GAASL,EAEnC,OAAQK,GACN,KAAKP,EAAUgD,KACb,OACEV,EAAAA,EAAAA,KAAA,OACEH,WAAWC,EAAAA,EAAAA,GAAK,gBAChBa,wBAAyB,CAAEC,OAAQvC,EAAcD,MAIvD,KAAKV,EAAUmD,MACb,OACEb,EAAAA,EAAAA,KAAA,OAAKH,WAAWC,EAAAA,EAAAA,GAAK,eAAgB,SAASC,UAC5CC,EAAAA,EAAAA,KAAA,OAAKc,IAAK9C,MAIhB,KAAKN,EAAUqD,MACb,OACEpB,EAAAA,EAAAA,MAAA,OAAKE,WAAWC,EAAAA,EAAAA,GAAK,iBAAiBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,cAAYH,WAAWC,EAAAA,EAAAA,GAAK,yBAAyBC,SAAE3B,KACvD4B,EAAAA,EAAAA,KAAA,KAAGH,WAAWC,EAAAA,EAAAA,GAAK,yBAAyBC,SAAEU,OAGpD,QACE,OAAOT,EAAAA,EAAAA,KAAAgB,EAAAA,SAAA,IACX,EAsCKC,CAAqBrD,QAEpB,C","sources":["components/article/Article.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport { createRef, useLayoutEffect } from 'react';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\nimport './Article.scss';\n\nexport enum PieceType {\n  Full = 'full',\n  Image = 'image',\n  Quote = 'quote',\n}\n\nexport interface Date {\n  year: string;\n  month?: string;\n  day?: string;\n}\nexport interface Piece {\n  content: string | string[];\n  date: Date;\n  description?: string;\n  speaker?: string;\n  title?: string;\n  type: PieceType;\n}\n\nexport interface ArticleProps {\n  article: Piece;\n  handleInView?: () => void;\n  side?: string;\n}\n\nconst Article = (props: ArticleProps) => {\n  const { article, side = 'left' } = props;\n  const articleRef = createRef<HTMLDivElement>();\n\n  let sampleImgSrc: string;\n  if (article?.type === 'image') {\n    sampleImgSrc = require(`../../content/timelineImages/${article.content}`);\n  }\n\n  const handleContent = (content: string | string[]): string => {\n    let convertedStr = '';\n\n    if (typeof content === 'string') {\n      convertedStr = content\n        .replaceAll('<highlight>', '<span class=\"highlight\">')\n        .replaceAll('</highlight>', '</span>');\n    } else if (typeof content === 'object') {\n      convertedStr = content.toString();\n    }\n\n    return convertedStr;\n  };\n\n  const renderDate = (date: Date) => {\n    let result = date.year;\n\n    if (date.month && date.month.length > 0) result += `, ${date.month}`;\n\n    if (date.day && date.day.length > 0) result += ` ${date.day}`;\n\n    return <p className={clsx('article-aside_date')}>{result}</p>;\n  };\n\n  const renderArticleContent = (article: Piece) => {\n    const { content, speaker, type } = article;\n\n    switch (type) {\n      case PieceType.Full:\n        return (\n          <div\n            className={clsx('article-body')}\n            dangerouslySetInnerHTML={{ __html: handleContent(content) }}\n          />\n        );\n      // TODO: refactor image into a child component of the article body\n      case PieceType.Image:\n        return (\n          <div className={clsx('article-body', 'image')}>\n            <img src={sampleImgSrc} />\n          </div>\n        );\n      // TODO: refactor quote into a child component of the article-body\n      case PieceType.Quote: // no example of standalone quote\n        return (\n          <div className={clsx('article-quote')}>\n            <blockquote className={clsx('article-quote_content')}>{content}</blockquote>\n            <p className={clsx('article-quote_speaker')}>{speaker}</p>\n          </div>\n        );\n      default:\n        return <></>;\n    }\n  };\n\n  useLayoutEffect(() => {\n    const ctx = gsap.context(() => {\n      gsap.registerPlugin(ScrollTrigger);\n\n      const scrollTriggerOptions = (trigger: string) => {\n        return {\n          end: 'top center+=15%',\n          markers: true,\n          scrub: true,\n          start: 'top bottom-=5%',\n          trigger: trigger,\n        };\n      };\n\n      gsap.from('.article-content', {\n        autoAlpha: 0,\n        stagger: 1.0,\n        scale: 0.7,\n        x: 300,\n        scrollTrigger: scrollTriggerOptions('.article-content'),\n      });\n    }, articleRef);\n\n    return () => ctx.revert();\n  }, [articleRef]);\n\n  return (\n    <div ref={articleRef} className={clsx('article-wrapper', side)}>\n      <aside className=\"article-aside\">{renderDate(article.date)}</aside>\n      <article className={clsx('article-content')}>\n        {article.title && article.title.length > 0 && (\n          <header className=\"article-header\">\n            <h2 className=\"article-header_title\">{article.title}</h2>\n          </header>\n        )}\n        {renderArticleContent(article)}\n      </article>\n    </div>\n  );\n};\n\nexport default Article;\n"],"names":["PieceType","props","article","side","articleRef","createRef","sampleImgSrc","type","require","concat","content","handleContent","convertedStr","replaceAll","toString","useLayoutEffect","ctx","gsap","context","registerPlugin","ScrollTrigger","trigger","from","autoAlpha","stagger","scale","x","scrollTrigger","end","markers","scrub","start","revert","_jsxs","ref","className","clsx","children","_jsx","date","result","year","month","length","day","renderDate","title","speaker","Full","dangerouslySetInnerHTML","__html","Image","src","Quote","_Fragment","renderArticleContent"],"sourceRoot":""}