{"version":3,"file":"static/js/Story.1174b7f3.chunk.js","mappings":"6MACA,QAA4B,yBAA5B,EAAsE,8BAAtE,EAA8G,uBAA9G,EAAoJ,4BAApJ,EAAuL,oBAAvL,EAA4P,qBAA5P,EAA4R,wBAA5R,EAAyU,kC,aCOzUA,EAAAA,GAAKC,eAAeC,EAAAA,GAEpB,MAAMC,GAAWC,EAAAA,EAAAA,OAAK,IAAMC,EAAAA,EAAiBC,kBAqF7C,EA3EeC,IACb,MAAM,UAAEC,EAAS,KAAEC,EAAI,GAAEC,EAAE,SAAEC,EAAQ,MAAEC,GAAUL,EAC3CM,GAAWC,EAAAA,EAAAA,QAAuB,MAClCC,GAAgBD,EAAAA,EAAAA,QAAyB,IAEzCE,EAAaC,IACbA,IAAOF,EAAcG,QAAQC,SAASF,IACxCF,EAAcG,QAAQE,KAAKH,EAC7B,GAGFI,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAMtB,EAAAA,GAAKuB,SAAQ,MACN,OAAbR,QAAa,IAAbA,OAAa,EAAbA,EAAeG,QAAQM,QAAS,GAClCT,EAAcG,QAAQO,SAASC,IAC7B1B,EAAAA,GAAK2B,KAAKD,EAAK,CACbE,cAAe,CACbC,QAASH,EACTI,MAAO,iBACPC,IAAK,kBACLC,MAAO,IAGTC,EAAG,OACHC,UAAW,GACX,GAEN,GACCrB,GACH,MAAO,IAAMS,EAAIa,QAAQ,GACxB,CAACpB,IAiBJ,OACEqB,EAAAA,EAAAA,KAAA,WAASV,IAAKb,EAAUH,GAAIA,EAAI2B,UAAWC,EAAiBC,UAC1DC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAsBC,SAAA,EACpCC,EAAAA,EAAAA,MAAA,UAAQH,UAAWC,EAAeC,SAAA,EAChCC,EAAAA,EAAAA,MAAA,OAAKH,WAAWI,EAAAA,EAAAA,GAAKH,GAAqBC,SAAA,CAnB9B9B,KAClB,IAAKA,EAAKiC,QAAUjC,EAAKkC,IAAK,OAAO,KAErC,IAAIC,EAAS,GAKb,OAHInC,EAAKiC,OAASjC,EAAKiC,MAAMlB,OAAS,IAAGoB,EAASnC,EAAKiC,OACnDjC,EAAKkC,KAAOlC,EAAKkC,IAAInB,OAAS,IAAGoB,GAAM,IAAAC,OAAQpC,EAAKkC,OAGtDP,EAAAA,EAAAA,KAAA,QAAMV,IAAKV,EAAWqB,UAAWC,EAAYC,SAC1CK,GACI,EASAE,CAAWrC,GACXG,IACCwB,EAAAA,EAAAA,KAAA,OAAKV,IAAKV,EAAWqB,WAAWI,EAAAA,EAAAA,GAAKH,GAAcC,SAChD3B,OAIND,IACCyB,EAAAA,EAAAA,KAAA,QAAMV,IAAKV,EAAWqB,WAAWI,EAAAA,EAAAA,GAAKH,GAAiBC,SACpD5B,QAIPyB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAA0BC,SACvC/B,EAAUuC,KAAI,CAACC,EAAGC,KACjBb,EAAAA,EAAAA,KAACjC,EAAQ,CAASuB,IAAKV,EAAWkC,KAAMF,EAAEE,KAAsBC,QAASH,EAAEG,SAA5DF,WAIb,C","sources":["webpack://modelperil-timeline/./src/components/story/Story.module.scss?5b2e","components/story/Story.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Story_container__+gmAO\",\"contentWrapper\":\"Story_contentWrapper__q5xkh\",\"heading\":\"Story_heading__tUKKO\",\"titleWrapper\":\"Story_titleWrapper__DvO6A\",\"date\":\"Story_date__Ujv1h\",\"lineWrapper\":\"Story_lineWrapper__2KYny\",\"title\":\"Story_title__bOae1\",\"subtitle\":\"Story_subtitle__UDxBs\",\"artifactsContainer\":\"Story_artifactsContainer__JhZ9X\"};","import clsx from 'clsx';\r\nimport { gsap } from 'gsap';\r\nimport ScrollTrigger from 'gsap/ScrollTrigger';\r\nimport { lazy, useEffect, useRef } from 'react';\r\nimport { Artifact as ArtifactModel, Date } from '../../models';\r\nimport { ComponentFactory, ArtifactType } from '../index';\r\nimport styles from './Story.module.scss';\r\n\r\ngsap.registerPlugin(ScrollTrigger);\r\n\r\nconst Artifact = lazy(() => ComponentFactory.ArtifactAsync());\r\n\r\nexport interface StoryProps {\r\n  artifacts: ArtifactModel[];\r\n  date: Date;\r\n  id?: string;\r\n  subtitle?: string;\r\n  title: string;\r\n}\r\n\r\nconst Story = (props: StoryProps) => {\r\n  const { artifacts, date, id, subtitle, title } = props;\r\n  const storyRef = useRef<HTMLDivElement>(null);\r\n  const animationRefs = useRef<HTMLDivElement[]>([]);\r\n\r\n  const addtoRefs = (el: HTMLDivElement) => {\r\n    if (el && !animationRefs.current.includes(el)) {\r\n      animationRefs.current.push(el);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const ctx = gsap.context(() => {\r\n      if (animationRefs?.current.length > 0) {\r\n        animationRefs.current.forEach((ref) => {\r\n          gsap.from(ref, {\r\n            scrollTrigger: {\r\n              trigger: ref,\r\n              start: 'top bottom-=5%',\r\n              end: 'top center+=10%',\r\n              scrub: 0.5,\r\n              // markers: true,\r\n            },\r\n            x: '50px',\r\n            autoAlpha: 0,\r\n          });\r\n        });\r\n      }\r\n    }, storyRef); // <- selector scoping\r\n    return () => ctx.revert();\r\n  }, [animationRefs]);\r\n\r\n  const renderDate = (date: Date) => {\r\n    if (!date.month && !date.day) return null;\r\n\r\n    let result = '';\r\n\r\n    if (date.month && date.month.length > 0) result = date.month;\r\n    if (date.day && date.day.length > 0) result += ` ${date.day}`;\r\n\r\n    return (\r\n      <span ref={addtoRefs} className={styles.date}>\r\n        {result}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <article ref={storyRef} id={id} className={styles.container}>\r\n      <div className={styles.contentWrapper}>\r\n        <header className={styles.heading}>\r\n          <div className={clsx(styles.titleWrapper)}>\r\n            {renderDate(date)}\r\n            {title && (\r\n              <div ref={addtoRefs} className={clsx(styles.title)}>\r\n                {title}\r\n              </div>\r\n            )}\r\n          </div>\r\n          {subtitle && (\r\n            <span ref={addtoRefs} className={clsx(styles.subtitle)}>\r\n              {subtitle}\r\n            </span>\r\n          )}\r\n        </header>\r\n        <div className={styles.artifactsContainer}>\r\n          {artifacts.map((a, i) => (\r\n            <Artifact key={i} ref={addtoRefs} type={a.type as ArtifactType} content={a.content} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n"],"names":["gsap","registerPlugin","ScrollTrigger","Artifact","lazy","ComponentFactory","ArtifactAsync","props","artifacts","date","id","subtitle","title","storyRef","useRef","animationRefs","addtoRefs","el","current","includes","push","useEffect","ctx","context","length","forEach","ref","from","scrollTrigger","trigger","start","end","scrub","x","autoAlpha","revert","_jsx","className","styles","children","_jsxs","clsx","month","day","result","concat","renderDate","map","a","i","type","content"],"sourceRoot":""}