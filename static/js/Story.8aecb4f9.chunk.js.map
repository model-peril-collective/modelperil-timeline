{"version":3,"file":"static/js/Story.8aecb4f9.chunk.js","mappings":"kOACA,EAA4B,yBAA5B,EAAsE,8BAAtE,EAA8G,uBAA9G,EAAoJ,4BAApJ,EAAuL,oBAAvL,EAA4P,qBAA5P,EAA4R,wBAA5R,EAAyU,kC,SCOzUA,EAAAA,GAAAA,eAAoBC,EAAAA,GAEpB,IAAMC,GAAWC,EAAAA,EAAAA,OAAK,kBAAMC,EAAAA,EAAAA,eAAgC,IAqF5D,EA3Ec,SAACC,GACb,IAAQC,EAAyCD,EAAzCC,UAAWC,EAA8BF,EAA9BE,KAAMC,EAAwBH,EAAxBG,GAAIC,EAAoBJ,EAApBI,SAAUC,EAAUL,EAAVK,MACjCC,GAAWC,EAAAA,EAAAA,QAAuB,MAClCC,GAAgBD,EAAAA,EAAAA,QAAyB,IAEzCE,EAAY,SAACC,GACbA,IAAOF,EAAcG,QAAQC,SAASF,IACxCF,EAAcG,QAAQE,KAAKH,EAE/B,GAEAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAMpB,EAAAA,GAAAA,SAAa,YACN,OAAba,QAAa,IAAbA,OAAa,EAAbA,EAAeG,QAAQK,QAAS,GAClCR,EAAcG,QAAQM,SAAQ,SAACC,GAC7BvB,EAAAA,GAAAA,KAAUuB,EAAK,CACbC,cAAe,CACbC,QAASF,EACTG,MAAO,iBACPC,IAAK,kBACLC,MAAO,IAGTC,EAAG,OACHC,UAAW,GAEf,GAEJ,GAAGnB,GACH,OAAO,kBAAMS,EAAIW,QAAS,CAC5B,GAAG,CAAClB,IAiBJ,OACE,oBAASU,IAAKZ,EAAUH,GAAIA,EAAIwB,UAAWC,EAAiB,UAC1D,iBAAKD,UAAWC,EAAsB,WACpC,oBAAQD,UAAWC,EAAe,WAChC,iBAAKD,WAAWE,EAAAA,EAAAA,GAAKD,GAAqB,UAnB/B,SAAC1B,GAClB,IAAKA,EAAK4B,QAAU5B,EAAK6B,IAAK,OAAO,KAErC,IAAIC,EAAS,GAKb,OAHI9B,EAAK4B,OAAS5B,EAAK4B,MAAMd,OAAS,IAAGgB,EAAS9B,EAAK4B,OACnD5B,EAAK6B,KAAO7B,EAAK6B,IAAIf,OAAS,IAAGgB,GAAM,WAAQ9B,EAAK6B,OAGtD,iBAAMb,IAAKT,EAAWkB,UAAWC,EAAY,SAC1CI,GAGP,CAOWC,CAAW/B,GACXG,IACC,gBAAKa,IAAKT,EAAWkB,WAAWE,EAAAA,EAAAA,GAAKD,GAAc,SAChDvB,OAIND,IACC,iBAAMc,IAAKT,EAAWkB,WAAWE,EAAAA,EAAAA,GAAKD,GAAiB,SACpDxB,QAIP,gBAAKuB,UAAWC,EAA0B,SACvC3B,EAAUiC,KAAI,SAACC,EAAGC,GAAC,OAClB,SAACvC,EAAQ,CAASqB,IAAKT,EAAW4B,KAAMF,EAAEE,KAAsBC,QAASH,EAAEG,SAA5DF,EAAuE,UAMlG,C","sources":["webpack://modelperil-timeline/./src/components/story/Story.module.scss?5b2e","components/story/Story.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Story_container__a3g7S\",\"contentWrapper\":\"Story_contentWrapper__-GV6O\",\"heading\":\"Story_heading__dxKEI\",\"titleWrapper\":\"Story_titleWrapper__1jBTh\",\"date\":\"Story_date__z54BV\",\"lineWrapper\":\"Story_lineWrapper__02RMg\",\"title\":\"Story_title__GkzTx\",\"subtitle\":\"Story_subtitle__tPXKK\",\"artifactsContainer\":\"Story_artifactsContainer__Dvt6D\"};","import clsx from 'clsx';\nimport { gsap } from 'gsap';\nimport ScrollTrigger from 'gsap/ScrollTrigger';\nimport { lazy, useEffect, useRef } from 'react';\nimport { Artifact as ArtifactModel, Date } from '../../models';\nimport { ComponentFactory, ArtifactType } from '../index';\nimport styles from './Story.module.scss';\n\ngsap.registerPlugin(ScrollTrigger);\n\nconst Artifact = lazy(() => ComponentFactory.ArtifactAsync());\n\nexport interface StoryProps {\n  id?: string;\n  artifacts: ArtifactModel[];\n  date: Date;\n  subtitle?: string;\n  title: string;\n}\n\nconst Story = (props: StoryProps) => {\n  const { artifacts, date, id, subtitle, title } = props;\n  const storyRef = useRef<HTMLDivElement>(null);\n  const animationRefs = useRef<HTMLDivElement[]>([]);\n\n  const addtoRefs = (el: HTMLDivElement) => {\n    if (el && !animationRefs.current.includes(el)) {\n      animationRefs.current.push(el);\n    }\n  };\n\n  useEffect(() => {\n    const ctx = gsap.context(() => {\n      if (animationRefs?.current.length > 0) {\n        animationRefs.current.forEach((ref) => {\n          gsap.from(ref, {\n            scrollTrigger: {\n              trigger: ref,\n              start: 'top bottom-=5%',\n              end: 'top center+=10%',\n              scrub: 0.5,\n              // markers: true,\n            },\n            x: '50px',\n            autoAlpha: 0,\n          });\n        });\n      }\n    }, storyRef); // <- selector scoping\n    return () => ctx.revert();\n  }, [animationRefs]);\n\n  const renderDate = (date: Date) => {\n    if (!date.month && !date.day) return null;\n\n    let result = '';\n\n    if (date.month && date.month.length > 0) result = date.month;\n    if (date.day && date.day.length > 0) result += ` ${date.day}`;\n\n    return (\n      <span ref={addtoRefs} className={styles.date}>\n        {result}\n      </span>\n    );\n  };\n\n  return (\n    <article ref={storyRef} id={id} className={styles.container}>\n      <div className={styles.contentWrapper}>\n        <header className={styles.heading}>\n          <div className={clsx(styles.titleWrapper)}>\n            {renderDate(date)}\n            {title && (\n              <div ref={addtoRefs} className={clsx(styles.title)}>\n                {title}\n              </div>\n            )}\n          </div>\n          {subtitle && (\n            <span ref={addtoRefs} className={clsx(styles.subtitle)}>\n              {subtitle}\n            </span>\n          )}\n        </header>\n        <div className={styles.artifactsContainer}>\n          {artifacts.map((a, i) => (\n            <Artifact key={i} ref={addtoRefs} type={a.type as ArtifactType} content={a.content} />\n          ))}\n        </div>\n      </div>\n    </article>\n  );\n};\n\nexport default Story;\n"],"names":["gsap","ScrollTrigger","Artifact","lazy","ComponentFactory","props","artifacts","date","id","subtitle","title","storyRef","useRef","animationRefs","addtoRefs","el","current","includes","push","useEffect","ctx","length","forEach","ref","scrollTrigger","trigger","start","end","scrub","x","autoAlpha","revert","className","styles","clsx","month","day","result","renderDate","map","a","i","type","content"],"sourceRoot":""}